user nginx;
worker_processes auto;

events {
    worker_connections 768;
}

http {
    upstream collegue_backend {
        # Docker Compose injectera les IPs des conteneurs collegue-app ici
        # Nginx utilisera le DNS interne de Docker pour résoudre 'collegue-app'
        # et répartira la charge entre toutes les instances disponibles.
        # Le port est celui sur lequel l'application Collegue écoute DANS le réseau Docker.
        server collegue-app:4121;
    }

    server {
        listen 80;
        server_name localhost; # Remplacez par votre nom de domaine en production

        # Endpoint de santé spécifique - redirige vers le serveur de santé sur le port 4122
        location /_health {
            proxy_pass http://collegue-app:4122/_health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Expose les endpoints de découverte OAuth pour MCP
        # Windsurf appellera: http://localhost:8088/.well-known/oauth-protected-resource
        location ^~ /.well-known/ {
            proxy_pass http://collegue-app:4122;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Configuration spécifique pour le endpoint MCP
        location /mcp/ {
            proxy_pass http://collegue_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Propager explicitement l'en-tête Authorization pour l'auth Bearer
            proxy_set_header Authorization $http_authorization;
            
            # Configuration pour streamable-http
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 86400s;
            
            # Headers spécifiques pour MCP streamable-http
            proxy_set_header Accept-Encoding "";
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Préservation des headers
            proxy_pass_request_headers on;

            # Support pour les requêtes POST/GET
            client_max_body_size 50M;
            client_body_buffer_size 16k;
            proxy_busy_buffers_size 24k;
            proxy_temp_file_write_size 64k;

            # Conserver l'URI d'origine (debug/traçabilité)
            proxy_set_header X-Original-URI $request_uri;
        }
        
        location / {
            proxy_pass http://collegue_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configuration pour streamable-http
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 86400s;
            
            # Headers spécifiques pour MCP streamable-http
            proxy_set_header Accept-Encoding "";
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Support pour les requêtes POST/GET
            client_max_body_size 50M;
            client_body_buffer_size 16k;
            proxy_busy_buffers_size 24k;
            proxy_temp_file_write_size 64k;
        }

        # Vous pouvez ajouter d'autres configurations ici, comme la gestion des assets statiques,
        # la configuration SSL/TLS, des règles de sécurité, etc.

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
    }
}
