user nginx;
worker_processes auto;

events {
    worker_connections 768;
}

http {
    upstream collegue_backend {
        # Docker Compose injectera les IPs des conteneurs collegue-app ici
        # Nginx utilisera le DNS interne de Docker pour résoudre 'collegue-app'
        # et répartira la charge entre toutes les instances disponibles.
        # Le port est celui sur lequel l'application Collegue écoute DANS le réseau Docker.
        server collegue-app:4121;
    }

    server {
        listen 80;
        server_name localhost; # Remplacez par votre nom de domaine en production

        location / {
            proxy_pass http://collegue_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Réglages pour les connexions WebSocket/SSE si votre app les utilise (FastMCP utilise SSE)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_buffering off; # Important pour SSE
            proxy_cache off;     # Important pour SSE
            proxy_read_timeout 86400s; # Long timeout pour les connexions persistantes
        }

        # Vous pouvez ajouter d'autres configurations ici, comme la gestion des assets statiques,
        # la configuration SSL/TLS, des règles de sécurité, etc.

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
    }
}
