# Exemple de configuration Nginx avec HTTPS (Let's Encrypt)
# --------------------------------------------------------
# Remplacez `your.domain.tld` par votre nom de domaine.
# Montez les certificats Let's Encrypt dans le conteneur Nginx:
#   - /etc/letsencrypt
#   - /var/www/certbot (pour les challenges HTTP)
# Et exécutez certbot (conteneur séparé) pour l'émission et le renouvellement.

user nginx;
worker_processes auto;

events {
	worker_connections 768;
}

http {
	upstream collegue_backend {
		# Application Collegue dans le réseau Docker
		server collegue-app:4121;
	}

	# HTTP (port 80): sert les challenges ACME et redirige le reste en HTTPS
	server {
		listen 80;
		server_name your.domain.tld; # à personnaliser

		# ACME HTTP-01 challenge
		location ^~ /.well-known/acme-challenge/ {
			root /var/www/certbot;
		}

		# Redirection par défaut vers HTTPS
		location / {
			return 301 https://$host$request_uri;
		}
	}

	# HTTPS (port 443)
	server {
		listen 443 ssl http2;
		server_name your.domain.tld; # à personnaliser

		# Certificats Let's Encrypt
		ssl_certificate /etc/letsencrypt/live/your.domain.tld/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/your.domain.tld/privkey.pem;
		# Fichiers générés par certbot
		include /etc/letsencrypt/options-ssl-nginx.conf; # sécurité TLS
		ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

		# Endpoint de santé (proxy vers health server sur 4122)
		location /_health {
			proxy_pass http://collegue-app:4122/_health;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		# Découverte OAuth (même origine que MCP)
		location ^~ /.well-known/ {
			proxy_pass http://collegue-app:4122;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		# Endpoint MCP (streamable-http) — ne pas réécrire les headers de session
		location /mcp/ {
			proxy_pass http://collegue_backend;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			# Propager explicitement l'en-tête Authorization
			proxy_set_header Authorization $http_authorization;

			# streamable-http
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_buffering off;
			proxy_cache off;
			proxy_read_timeout 86400s;
			proxy_set_header Accept-Encoding "";

			# Préserver les headers (X-Session-ID / MCP-Session-ID non modifiés)
			proxy_pass_request_headers on;

			# Taille/performances
			client_max_body_size 50M;
			client_body_buffer_size 16k;
			proxy_busy_buffers_size 24k;
			proxy_temp_file_write_size 64k;

			# Traçabilité
			proxy_set_header X-Original-URI $request_uri;
		}

		# Fallback (si vous exposez une UI/API additionnelle)
		location / {
			proxy_pass http://collegue_backend;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_buffering off;
			proxy_cache off;
			proxy_read_timeout 86400s;
			proxy_set_header Accept-Encoding "";
		}

		access_log /var/log/nginx/access.log;
		error_log /var/log/nginx/error.log;
	}
}
