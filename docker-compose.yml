services:
  collegue-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: collegue-app:latest # Assurez-vous que cette image est construite et disponible
    restart: always
    networks:
      - collegue-net
    environment:
      # Décommentez et configurez vos variables d'environnement ici ou via un fichier .env
      PYTHONUNBUFFERED: 1
      # LLM_API_KEY: ${LLM_API_KEY}
      # ... autres variables nécessaires à collegue-app
      PORT: 4121 # Port interne sur lequel l'application Collegue écoute
      # Configuration pour streamable-http
      MCP_TRANSPORT: streamable-http
      MCP_HOST: 0.0.0.0
    # Si vous utilisez un fichier .env, décommentez la ligne suivante
    env_file:
      - .env
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4122/_health"] # Utilise HEALTH_PORT (4122)
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s # Donne du temps à l'application pour démarrer avant de commencer les healthchecks
    logging:
      driver: "json-file"
      options:
        max-size: "10m" # Taille maximale de chaque fichier log
        max-file: "3"   # Nombre de fichiers de log à conserver (rotation)

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.2
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
    env_file:
      - .env
    ports:
      - "4123:8080"
    networks:
      - collegue-net
    # healthcheck removed: keycloak image may not include curl/wget

  kc-provisioner:
    build:
      context: .
      dockerfile: docker/kc-provisioner/Dockerfile
    depends_on:
      keycloak:
        condition: service_started
    environment:
      KC_URL: http://keycloak:8080
      KC_REALM: ${KC_REALM:-master}
      KC_ADMIN_USERNAME: ${KEYCLOAK_ADMIN}
      KC_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      PROVISION_CLIENT_ID: ${PROVISION_CLIENT_ID:-windsurf}
      REQUIRED_SCOPE: ${OAUTH_REQUIRED_SCOPES:-mcp.read}
      WAIT_FOR_CLIENT_SECONDS: ${WAIT_FOR_CLIENT_SECONDS:-300}
    networks:
      - collegue-net
    restart: "no"

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "8088:80" # Expose le port 8088 publiquement, mappé sur le port 80 de Nginx
      # Si vous voulez utiliser HTTPS (recommandé en production), vous exposerez le 443
      # - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro # Monte le fichier de configuration Nginx
      # Pour HTTPS avec Let's Encrypt, vous monteriez aussi les certificats ici
      # - ./nginx/certs:/etc/nginx/certs:ro 
      - nginx_logs:/var/log/nginx # Volume pour les logs Nginx
    networks:
      - collegue-net
    depends_on:
      collegue-app:
        condition: service_healthy # Nginx ne démarrera que si collegue-app est healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  collegue-net:
    driver: bridge

volumes:
  nginx_logs: # Volume pour persister les logs Nginx
