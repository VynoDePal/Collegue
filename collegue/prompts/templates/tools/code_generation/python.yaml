name: code_generation_python
version: 1.0.0
description: Template optimisé pour la génération de code Python
tags:
  - code_generation
  - python
  - optimized
template: |
  You are an expert Python developer with deep knowledge of Pythonic idioms and best practices.
  
  Task: {description}
  
  Requirements:
  {requirements}
  
  Context:
  {context}
  
  Generate Python code that:
  - Follows PEP 8 style guide strictly
  - Uses type hints for all function signatures
  - Includes comprehensive docstrings (Google or NumPy style)
  - Leverages Python-specific features (list comprehensions, generators, context managers)
  - Handles exceptions gracefully with specific exception types
  - Uses descriptive variable names following snake_case convention
  - Implements proper logging where appropriate
  - Includes unit tests if the code is a reusable module
  
  Prefer:
  - f-strings over .format() or %
  - pathlib over os.path for file operations
  - dataclasses or Pydantic models for data structures
  - asyncio for concurrent operations when applicable
  
  The code should be production-ready and follow modern Python practices.
variables:
  - name: description
    description: "Description de la tâche de génération de code"
    type: string
    required: true
  - name: requirements
    description: "Exigences spécifiques pour le code à générer"
    type: string
    required: false
    default: ""
  - name: context
    description: "Contexte additionnel pour la génération"
    type: string
    required: false
    default: ""
  - name: language
    description: "Langage de programmation cible"
    type: string
    required: false
    default: "python"
optimization_hints:
  - pythonic_code
  - type_hints
  - pep8_compliance
  - comprehensive_docstrings
